/*  –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
 *  - extends
 *  - super()
 */
class Hero {
    constructor({ name = 'Hero', xp = 0 } = {}) {
        this.name = name;
        this.xp = xp;
    }

    gainXp(amount) {
        console.log(`${this.name} –ø–æ–ª—É—á–∞–µ—Ç: ${amount} –æ–ø—ã—Ç–∞`);
        this.xp += amount;
    }
}

class Warrior extends Hero {
    constructor({ weapon, ...restProps } = {}) {
        super(restProps);
        
        this.weapon = weapon;
    }

    attack() {
        console.log(`${this.name} –∞—Ç–∞–∫—É–µ—Ç –∏—Å–ø–æ–ª—å–∑—É—è: ${this.weapon}`);
    }
}

class Berserk extends Warrior {
    constructor({ warcry, ...restProps } = {}) {
        super(restProps);

        this.warcry = warcry;
    }

    rage() {
        console.log(`${this.name} –∫—Ä–∏—á–∏—Ç:`, this.warcry);
    }
}

class Mage extends Hero {
    constructor({ spells, ...restProps } = {}) {
        super(restProps);

        this.spells = spells;
    }

    cast() {
        console.log(`${this.name} —á—Ç–æ-—Ç–æ —Ç–∞–º –∫–∞—Å—Ç—É–µ—Ç üßô‚Äç‚ôÇÔ∏è`);
    }
}

const human = new Warrior({ name: 'ImpiStar', xp: 1000, weapon: 'DragonSword' });
console.log(human);                 // Warrior¬†{ name: "ImpiStar", xp: 1000, weapon: "DragonSword" }
human.attack();                     // ImpiStar –∞—Ç–∞–∫—É–µ—Ç –∏—Å–ø–æ–ª—å–∑—É—è: DragonSword
human.gainXp(1000);                 // ImpiStar –ø–æ–ª—É—á–∞–µ—Ç: 1000 –æ–ø—ã—Ç–∞

const mage = new Mage({ name: 'Drago', xp: 500, spells: ['FireBool'] });
console.log(mage);                  // Mage¬†{ name: "Drago", xp: 500, spells: ["FireBool"] }
mage.cast();                        // Drago —á—Ç–æ-—Ç–æ —Ç–∞–º –∫–∞—Å—Ç—É–µ—Ç üßô‚Äç‚ôÇÔ∏è
mage.gainXp(500);                   // Drago –ø–æ–ª—É—á–∞–µ—Ç: 500 –æ–ø—ã—Ç–∞

const ork = new Berserk({ name: 'Ajax', xp: 1500, weapon: 'Axe', warcry: 'waaaaah' });
console.log(ork);                   // Berserk¬†{ name: "Ajax", xp: 1500, weapon: "Axe", warcry: "waaaaah" }
ork.rage();                         // Ajax –∫—Ä–∏—á–∏—Ç: waaaaah
ork.attack();                       // Ajax –∞—Ç–∞–∫—É–µ—Ç –∏—Å–ø–æ–ª—å–∑—É—è: Axe
ork.gainXp(300);                    // Ajax –ø–æ–ª—É—á–∞–µ—Ç: 300 –æ–ø—ã—Ç–∞ 

console.log(    
    `human.__proto__ === Warrior.prototype`,
    human.__proto__ === Warrior.prototype
);                                                                  // true
// console.log(Object.getPrototypeOf(human) === Warrior.prototype);

console.log(
    `Warrior.prototype.__proto__ === Hero.prototype`,
    Warrior.prototype.__proto__ === Hero.prototype
);                                                                  // true


console.log(`Mage.prototype ->`,Mage.prototype);                      // Mage.prototype -> Hero¬†{ constructor: ∆í, cast: ∆í }
console.log(`Berserk.prototype ->`, Berserk.prototype);               // Berserk.prototype -> Warrior¬†{ constructor: ∆í, rage: ∆í }
console.log(`Warrior.prototype ->`, Warrior.prototype);               // Warrior.prototype -> Hero¬†{ constructor: ∆í, attack: ∆í }
console.log(`Hero.prototype ->`, Hero.prototype);                     // Hero.prototype -> { constructor: ∆í, gainXp: ∆í }



/*  –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ extends –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤, –∫–æ–≥–¥–∞ –æ–¥–∏–Ω –∫–ª–∞—Å—Å (–¥–æ—á–µ—Ä–Ω–∏–π, –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–π) –Ω–∞—Å–ª–µ–¥—É–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –¥—Ä—É–≥–æ–≥–æ –∫–ª–∞—Å—Å–∞ (—Ä–æ–¥–∏—Ç–µ–ª—è). 
*   –í –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ class Child extends Parent –¥–æ—á–µ—Ä–Ω–∏–π –∫–ª–∞—Å—Å Child –Ω–∞—Å–ª–µ–¥—É–µ—Ç (—Ä–∞—Å—à–∏—Ä—è–µ—Ç) –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ Parent.
*   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º—ã –º–æ–∂–µ–º –æ–±—ä—è–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å, 
*   –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –æ–±—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –º–µ—Ç–æ–¥—ã –¥–ª—è –≥—Ä—É–ø–ø—ã –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤, 
*   –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å–ª–µ–¥—É—é—Ç —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã —Ä–æ–¥–∏—Ç–µ–ª—è, –Ω–æ —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è—é—Ç —Å–≤–æ–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ.
*/
class User {
    email;

    constructor(email) {
        this.email = email;
    }

    get email() {
        return this.email;
    }

    set email(newEmail) {
        this.email = newEmail;
    }
}

// –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ extends —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å, —á—å–∏ —Å–≤–æ–π—Å—Ç–≤–∞ –±—É–¥—É—Ç —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω—ã.
class ContentWriter extends User {
    // –¢–µ–ª–æ –∫–ª–∞—Å—Å–∞ ContentWriter
    posts;

    constructor({ email, posts }) {
        // –í—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ User
        super(email);
        this.posts = posts;
    }

    addPost(post) {
        this.posts.push(post);
    }
}

const writer = new ContentWriter({ email: 'mango@mail.com', posts: [] });
console.log(writer);                                // { email: 'mango@mail.com', posts: [] }
console.log(writer.email);                          // 'mango@mail.com'
writer.addPost('post-1');
console.log(writer.posts);                          // ['post-1']

/* –ö–ª–∞—Å—Å ContentWriter –Ω–∞—Å–ª–µ–¥—É–µ—Ç –æ—Ç –∫–ª–∞—Å—Å–∞ User –µ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä email, –∞ —Ç–∞–∫–∂–µ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–µ –ø—É–±–ª–∏—á–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ. 
*  __–í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞-—Ä–æ–¥–∏—Ç–µ–ª—è –Ω–µ –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –∫–ª–∞—Å—Å–æ–º-—Ä–µ–±—ë–Ω–∫–æ–º.
*/